[project]
name = "jwskate"
description = "A Pythonic implementation of the JOSE / JSON Web Crypto related RFCs (JWS, JWK, JWA, JWT, JWE)"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [{ name = "Guillaume Pujol", email = "guillp.dev@pm.me" }]
version = "0.12.2"

classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'Topic :: Security',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
]
dependencies = ["cryptography>=3.4", "typing-extensions>=4.3", "binapy>=0.8"]

[project.urls]
homepage = "https://github.com/guillp/jwskate"
documentation = "https://guillp.github.io/jwskate/"
pypi = "https://pypi.org/project/jwskate/"

[tool.hatch.build.targets.wheel]
packages = ["jwskate"]

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "/tests",
    ".gitignore",
    ".editorconfig",
    ".pre-commit-config.yaml",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[dependency-groups]
dev = [
    "coverage[toml]>=7.6.1",
    "jwcrypto>=1.5.6",
    "pre-commit>=4.0.0",
    "pytest-cov>=5.0.0",
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "pytest-freezer>=0.4.8",
    "pytest-mypy>=0.10.3",
    "mkdocs>=1.6.1",
    "mkdocstrings[python]>=0.26.1",
    "mkdocs-autorefs>=1.2.0",
    "mkdocs-include-markdown-plugin>=6.2.2",
    "mkdocs-material>=9.5.45",
    "mkdocs-material-extensions>=1.3.1",
]

[tool.mypy]
strict = true
pretty = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.docformatter]
recursive = true
wrap-summaries = 120
wrap-descriptions = 120
blank = true

[tool.ruff]
target-version = "py39"
line-length = 120


[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
    "A005",    # Module name shadows a Python standard-library module
    "ANN401",  # `Any` type in function args
    "COM812",  # Missing trailing comma in a tuple
    "RUF012",  # Mutable class attributes should be annotated with `typing.ClassVar`
    "N818",    # Exception names should be named with an Error suffix
    "PLR0912", # Too many branches
    "D107",    # Missing docstring in `__init__`
    "ISC001",  # Implicitly concatenated string literals on one line
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "ARG001",
    "B018",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "F821",
    "N806",
    "PGH005",
    "PLR0913",
    "PLR0915",
    "PLR2004",
    "S101",
    "S106",
    "S113",
    "PT011",
    "E501",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = ['override']

[tool.ruff.lint.pylint]
max-args = 10


[tool.coverage.run]
omit = ["tests/"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "def main",
    "...",
    "assert False",
    "pytest.skip",
    "pass",
]
